---
source: htmxology-macros/src/components_controller/mod.rs
expression: test_components_controller(input)
---
#[allow(unused)]
mod __test {
    impl htmxology::AsComponent<'_, DynamicController, (u64,)> for AppController {
        fn as_component_controller(&self, args: (u64,)) -> DynamicController {
            <DynamicController>::from((self, args.0))
        }
    }
    #[derive(Debug, Clone, htmxology::Route)]
    pub enum AppRoute {
        #[catch_all]
        Dynamic {
            resource_id: u64,
            subroute: <DynamicController as htmxology::Controller>::Route,
        },
    }
    impl htmxology::Controller for AppController {
        type Route = AppRoute;
        type Args = ();
        async fn handle_request(
            &self,
            route: Self::Route,
            htmx: htmxology::htmx::Request,
            parts: http::request::Parts,
            server_info: &htmxology::ServerInfo,
        ) -> Result<axum::response::Response, axum::response::Response> {
            match route {
                Self::Route::Dynamic { resource_id, subroute } => {
                    self.get_component_with::<DynamicController>((resource_id,))
                        .handle_request(subroute, htmx, parts, server_info)
                        .await
                }
            }
        }
    }
}
