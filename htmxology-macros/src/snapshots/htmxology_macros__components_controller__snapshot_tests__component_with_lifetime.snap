---
source: htmxology-macros/src/components_controller.rs
expression: test_components_controller(input)
---
#[allow(unused)]
mod __test {
    impl<
        '_component_spec_lifetime,
    > htmxology::AsComponent<
        '_component_spec_lifetime,
        &'_component_spec_lifetime DataController,
    > for AppController {
        fn as_component_controller(
            &'_component_spec_lifetime self,
        ) -> &'_component_spec_lifetime DataController {
            self.into()
        }
    }
    #[derive(Debug, Clone, htmxology::Route)]
    pub enum AppRoute {
        #[route("data/")]
        Data(#[subroute] <&'static DataController as htmxology::Controller>::Route),
    }
    impl htmxology::Controller for AppController {
        type Route = AppRoute;
        async fn handle_request(
            &self,
            route: Self::Route,
            htmx: htmxology::htmx::Request,
            parts: http::request::Parts,
            server_info: &htmxology::ServerInfo,
        ) -> Result<axum::response::Response, axum::response::Response> {
            match route {
                Self::Route::Data(route) => {
                    self.get_component::<&DataController>()
                        .handle_request(route, htmx, parts, server_info)
                        .await
                }
            }
        }
    }
}
